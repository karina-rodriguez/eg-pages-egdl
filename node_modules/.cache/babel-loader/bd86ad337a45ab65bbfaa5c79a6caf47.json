{"ast":null,"code":"'use strict';\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\n\nfunction shuffle(arr, options) {\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n}\n\n;\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\n\nshuffle.pick = function (arr, options) {\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n/**\n * Expose\n */\n\n\nmodule.exports = shuffle;","map":{"version":3,"names":["shuffle","arr","options","Array","isArray","Error","collection","len","length","rng","Math","random","temp","copy","slice","floor","pick","picks","index","push","splice","module","exports"],"sources":["/Users/kre/workspace/research/websites/reacteg/react-pages-egdl/node_modules/shuffle-array/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n};\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+B;EAE7B,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAL,EAAyB;IACvB,MAAM,IAAII,KAAJ,CAAU,uCAAV,CAAN;EACD;;EAEDH,OAAO,GAAGA,OAAO,IAAI,EAArB;EAEA,IAAII,UAAU,GAAGL,GAAjB;EAAA,IACIM,GAAG,GAAGN,GAAG,CAACO,MADd;EAAA,IAEIC,GAAG,GAAGP,OAAO,CAACO,GAAR,IAAeC,IAAI,CAACC,MAF9B;EAAA,IAGIA,MAHJ;EAAA,IAIIC,IAJJ;;EAMA,IAAIV,OAAO,CAACW,IAAR,KAAiB,IAArB,EAA2B;IACzBP,UAAU,GAAGL,GAAG,CAACa,KAAJ,EAAb;EACD;;EAED,OAAOP,GAAP,EAAY;IACVI,MAAM,GAAGD,IAAI,CAACK,KAAL,CAAWN,GAAG,KAAKF,GAAnB,CAAT;IACAA,GAAG,IAAI,CAAP;IACAK,IAAI,GAAGN,UAAU,CAACC,GAAD,CAAjB;IACAD,UAAU,CAACC,GAAD,CAAV,GAAkBD,UAAU,CAACK,MAAD,CAA5B;IACAL,UAAU,CAACK,MAAD,CAAV,GAAqBC,IAArB;EACD;;EAED,OAAON,UAAP;AACD;;AAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,OAAO,CAACgB,IAAR,GAAe,UAASf,GAAT,EAAcC,OAAd,EAAuB;EAEpC,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAL,EAAyB;IACvB,MAAM,IAAII,KAAJ,CAAU,8CAAV,CAAN;EACD;;EAEDH,OAAO,GAAGA,OAAO,IAAI,EAArB;EAEA,IAAIO,GAAG,GAAGP,OAAO,CAACO,GAAR,IAAeC,IAAI,CAACC,MAA9B;EAAA,IACIM,KAAK,GAAGf,OAAO,CAACe,KAAR,IAAiB,CAD7B;;EAGA,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,CAA3C,EAA8C;IAC5C,IAAIV,GAAG,GAAGN,GAAG,CAACO,MAAd;IAAA,IACIF,UAAU,GAAGL,GAAG,CAACa,KAAJ,EADjB;IAAA,IAEIH,MAAM,GAAG,EAFb;IAAA,IAGIO,KAHJ;;IAKA,OAAOD,KAAK,IAAIV,GAAhB,EAAqB;MACnBW,KAAK,GAAGR,IAAI,CAACK,KAAL,CAAWN,GAAG,KAAKF,GAAnB,CAAR;MACAI,MAAM,CAACQ,IAAP,CAAYb,UAAU,CAACY,KAAD,CAAtB;MACAZ,UAAU,CAACc,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;MACAX,GAAG,IAAI,CAAP;MACAU,KAAK,IAAI,CAAT;IACD;;IAED,OAAON,MAAP;EACD;;EAED,OAAOV,GAAG,CAACS,IAAI,CAACK,KAAL,CAAWN,GAAG,KAAKR,GAAG,CAACO,MAAvB,CAAD,CAAV;AACD,CA7BD;AA+BA;AACA;AACA;;;AACAa,MAAM,CAACC,OAAP,GAAiBtB,OAAjB"},"metadata":{},"sourceType":"script"}