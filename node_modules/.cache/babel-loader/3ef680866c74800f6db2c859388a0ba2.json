{"ast":null,"code":"var _jsxFileName = \"/Users/kre/workspace/research/websites/reacteg/react-pages-egdl/src/components/EGdata.js\";\nimport React from 'react';\nimport './EGdata.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EGdata extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      communityid: this.props.communityid,\n      name: '',\n      link: '',\n      description: '',\n      collections: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component Did Mount ' + this.state.communityid); // this.getCommunityData(this.state.communityid);\n\n    this.getCommunityData();\n  }\n\n  async getCommunityData() {\n    console.log(\"now get\"); // var policies = [\n    //     // Referer will never be set.\n    //     'no-referrer',\n    //     // Referer will not be set when navigating from HTTPS to HTTP.\n    //     'no-referrer-when-downgrade',\n    //     // Full Referer for same-origin requests, and no Referer for cross-origin requests.\n    //     'same-origin',\n    //     // Referer will be set to just the origin, omitting the URL's path and search.\n    //     'origin',\n    //     // Referer will be set to just the origin except when navigating from HTTPS to HTTP,\n    //     // in which case no Referer is sent.\n    //     'strict-origin',\n    //     // Full Referer for same-origin requests, and bare origin for cross-origin requests.\n    //     'origin-when-cross-origin',\n    //     // Full Referer for same-origin requests, and bare origin for cross-origin requests\n    //     // except when navigating from HTTPS to HTTP, in which case no Referer is sent.\n    //     'strict-origin-when-cross-origin',\n    //     // Full Referer for all requests, whether same- or cross-origin.\n    //     'unsafe-url'\n    //   ];\n    //   var url = 'users.json';\n    // const response = await fetch('https://api.connectingcontexts.uk/Process.php?id=1');\n    //     await fetch('https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10', {\n    //             method: \"GET\", // default, so we can ignore);\n    //             headers: {\n    //                         \"Access-Control-Allow-Origin\": \"*\",\n    //                         \"Content-Type\": \"text/plain\"\n    //                     },\n    // }).then((response) => {\n    //     if(response.status === 200){\n    //         console.log(\"SUCCESSS\")\n    //         return response.text();     \n    //     }else if(response.status === 408){\n    //         console.log(\"SOMETHING WENT WRONG\")\n    //         this.setState({ requestFailed: true })\n    //     };\n    //     );\n    // const xhr = new XMLHttpRequest();\n    // const url1 = \"https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10\";\n    // xhr.open(\"GET\", url1);\n    // xhr.onreadystatechange1 = {someHandler(){console.log(\"aaaa11aaaaaa\");}};\n    // xhr.send();\n    //https://wiki.lyrasis.org/display/DSPACE/2017-05-11+DSpace+7+UI+Working+Group+Meeting+notes\n\n    await fetch('https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Access-Control-Allow-Origin': '*'\n      } // headers: {\n      //     'Content-Type': 'multipart/form-data',\n      //     'Accept': 'text/html',\n      //     'Cache-Control': 'no-cache',\n      //     'Referrer': 'sss',\n      // },\n      // referrerPolicy: \"no-referrer-when-downgrade\",\n      // mode: \"cors\",\n      // headers: {\n      //             // \"Access-Control-Allow-Origin\": '*',\n      //             'Content-Type': 'application/json',\n      //             // 'Cache-Control': 'private'\n      //         },\n      // referrer: \"https://wwwnew.eg.org/\",\n      // referrerPolicy: \"no-referrer-when-downgrade\", // no-referrer, origin, same-origin...\n      // mode: \"cors\",\n      // cache: \"default\",\n      // redirect: \"follow\",\n      // integrity: \"\", // a hash, like \"sha256-abcdef1234567890\"\n      // keepalive: false, // true\n      // signal: undefined, // AbortController to abort request\n      // window: window, // null\n      //     credentials: 'include',\n      //         // referrer: \"https://wwwnew.eg.org/\", // or \"\" to send no Referer header,\n      //         // or an url from the current origin\n      //         // referrerPolicy: \"no-referrer-when-downgrade\", // no-referrer, origin, same-origin...\n      //         // mode: \"cors\", // same-origin, no-cors\n      //         mode: \"cors\",\n      //         // credentials: \"same-origin\", // omit, include\n      //         // cache: \"default\", // no-store, reload, no-cache, force-cache, or only-if-cached\n      //         // redirect: \"follow\", // manual, error\n      //         // integrity: \"\", // a hash, like \"sha256-abcdef1234567890\"\n      //         // keepalive: false, // true\n      //         // signal: undefined, // AbortController to abort request\n      //         // window: window // null\n      //               // credentials: 'include',\n      // // mode: 'cors'\n\n    }).then(response => {\n      console.log(\"a\");\n      console.log(response);\n\n      if (response.status === 200) {\n        console.log(\"SUCCESSS\");\n        return response.json();\n      } else if (response.status === 408) {\n        console.log(\"SOMETHING WENT WRONG\");\n        this.setState({\n          requestFailed: true\n        });\n      }\n    }).then(data => {\n      console.log(\"b\");\n      console.log(data);\n      console.log(data['uuid']); // this.state.name = data['uuid'];\n\n      this.setState({\n        name: data['name']\n      });\n      this.setState({\n        link: data['link']\n      });\n      this.setState({\n        description: data['introductoryText']\n      }); // console.log(data.json())\n      // this.setState({ isLoading: false, downlines: data.response })\n      // console.log(\"DATA STORED\")\n    }).catch(error => {\n      console.log(\"DATA aaa \" + error);\n      this.setState({\n        requestFailed: true\n      });\n    }); //     let url1 = 'https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10';\n    //     let myheader = {\n    //             method: 'GET',\n    //             headers: {\n    //             'Content-Type': 'application/json;charset=utf-8',\n    //             'Access-Control-Allow-Origin': '*',\n    //             },\n    //             'referrerPolicy': 'no-referrer-when-downgrade',\n    //             'mode': 'cors', // no-cors, *cors, same-origin\n    //             'cache': 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    //             // 'credentials': 'same-origin', // include, *same-origin, omit\n    //     };\n    //     let response = await fetch(url1,myheader);\n    //     // get one header\n    //     // alert(response.headers.get('Content-Type')); // application/json; charset=utf-8\n    //     let commits = await response.text(); // read response body and parse as JSON\n    //     // alert(commits[0].author.login);\n    // console.log(\"end call api\")\n    // console.log(\"pass\");\n    // var myHeaders = new Headers();\n    // myHeaders.append(\"Cookie\", \"JSESSIONID=2D72F41C0B312B8DB291FCCD6EFCB6B1\");\n    // myHeaders.append(\"Content-Type\", \"application/json\");\n    // myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n    // myHeaders.append(\"referrerPolicy\", \"no-referrer-when-downgrade\");\n    // var requestOptions = {\n    //   method: 'GET',\n    //   headers: myHeaders,\n    //   redirect: 'follow'\n    // };\n    // fetch(\"https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10\", requestOptions)\n    //   .then(response => response.text())\n    //   .then(result => console.log(result))\n    //   .catch(error => console.log('error', error));\n    //   console.log(\"pas1s\");\n    // console.log(\"pass\");\n    // const json = await response.text();\n    // then((textResponse) => console.log('response is ', textResponse));\n    // const json = await response.json();\n    // console.log(\"res \"+json);\n    // // await fetch('https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10', {\n    // await fetch('https://api.connectingcontexts.uk/Process.php?id=1', {\n    //     method: \"GET\", // default, so we can ignore\n    //      headers: {\n    //         \"Access-Control-Allow-Origin\": \"*\",\n    //         \"Content-Type\": \"text/plain\"\n    //     },\n    //     //  accept: 'application/json'\n    // //  }).then((response) => response.json())\n    // }).then((response) => response.text())\n    //  .then((textResponse) => console.log('response is ', textResponse))\n    //  .catch((error) => {\n    //     console.log(\"3\");\n    //      console.log(error);\n    //  });\n    // console.log(\"2\");\n    // const json = await response.json();\n    // console.log(\"3\");\n    // console.log(json);\n    // const name = json.name;\n    // const text = [];\n    // const cards = [];\n    // // console.log(processes.length);\n    // for (let i = 0; i < processes.length; i++) {\n    //     text.push(processes[i].Process);\n    //     this.setState({slideshow: null});\n    //     await this.recursiveSlideshow(processes[i].ID);\n    //     cards.push(\n    //         <div className=\"card\" key={processes[i].ID} id={processes[i].ID} >\n    //             <a href={\"/Process?processId=\" + processes[i].ID}>\n    //                 <div className=\"container\">\n    //                     {/* Locally stored images */}\n    //                     {/* <img src={require('../' + processes[i].image).default}  alt={'process image for ' + processes[i].Process}/> */}\n    //                     <Carousel showIndicators={true} showStatus={true} showArrows={true} showThumbs={true} autoPlay={true} axis={\"horizontal\"} infiniteLoop={true}>\n    //                     {this.state.slideshow}\n    //                     </Carousel>\n    //                     <p><b>{processes[i].Process}</b></p>\n    //                 </div>\n    //             </a>\n    //         </div>\n    //         // <div className=\"card\">\n    //         //     kskks\n    //         // </div>\n    //     );\n    // }\n    // console.log(cards.length);\n    // this.setState({cards: cards});\n    // this.setState({textpr: text});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-md-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 7,\n            children: [\"                \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              dangerouslySetInnerHTML: {\n                __html: this.state.description\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 1,\n            className: \"vl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Social media: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default EGdata;","map":{"version":3,"names":["React","Container","Row","Col","useState","useEffect","EGdata","Component","constructor","props","state","communityid","name","link","description","collections","componentDidMount","console","log","getCommunityData","fetch","method","headers","then","response","status","json","setState","requestFailed","data","catch","error","render","__html"],"sources":["/Users/kre/workspace/research/websites/reacteg/react-pages-egdl/src/components/EGdata.js"],"sourcesContent":["import React from 'react';\nimport './EGdata.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useState, useEffect } from 'react'\n\n\nclass EGdata extends React.Component{\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            communityid: this.props.communityid,\n            name: '',\n            link: '',\n            description: '',\n            collections: [],        }\n    }\n    componentDidMount(){\n        console.log('Component Did Mount '+this.state.communityid);\n        // this.getCommunityData(this.state.communityid);\n        this.getCommunityData();\n    }\n\n    async getCommunityData(){\n        console.log(\"now get\");\n        // var policies = [\n        //     // Referer will never be set.\n        //     'no-referrer',\n          \n        //     // Referer will not be set when navigating from HTTPS to HTTP.\n        //     'no-referrer-when-downgrade',\n          \n        //     // Full Referer for same-origin requests, and no Referer for cross-origin requests.\n        //     'same-origin',\n          \n        //     // Referer will be set to just the origin, omitting the URL's path and search.\n        //     'origin',\n          \n        //     // Referer will be set to just the origin except when navigating from HTTPS to HTTP,\n        //     // in which case no Referer is sent.\n        //     'strict-origin',\n          \n        //     // Full Referer for same-origin requests, and bare origin for cross-origin requests.\n        //     'origin-when-cross-origin',\n          \n        //     // Full Referer for same-origin requests, and bare origin for cross-origin requests\n        //     // except when navigating from HTTPS to HTTP, in which case no Referer is sent.\n        //     'strict-origin-when-cross-origin',\n          \n        //     // Full Referer for all requests, whether same- or cross-origin.\n        //     'unsafe-url'\n        //   ];\n        //   var url = 'users.json';\n        // const response = await fetch('https://api.connectingcontexts.uk/Process.php?id=1');\n    //     await fetch('https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10', {\n    //             method: \"GET\", // default, so we can ignore);\n    //             headers: {\n    //                         \"Access-Control-Allow-Origin\": \"*\",\n    //                         \"Content-Type\": \"text/plain\"\n    //                     },\n    // }).then((response) => {\n    //     if(response.status === 200){\n    //         console.log(\"SUCCESSS\")\n    //         return response.text();     \n    //     }else if(response.status === 408){\n    //         console.log(\"SOMETHING WENT WRONG\")\n    //         this.setState({ requestFailed: true })\n    //     };\n    //     );\n    // const xhr = new XMLHttpRequest();\n    // const url1 = \"https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10\";\n\n    // xhr.open(\"GET\", url1);\n    // xhr.onreadystatechange1 = {someHandler(){console.log(\"aaaa11aaaaaa\");}};\n    // xhr.send();\n    \n\n    //https://wiki.lyrasis.org/display/DSPACE/2017-05-11+DSpace+7+UI+Working+Group+Meeting+notes\n    await fetch('https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10', \n    {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            'Access-Control-Allow-Origin': '*',\n        }\n            // headers: {\n            //     'Content-Type': 'multipart/form-data',\n            //     'Accept': 'text/html',\n            //     'Cache-Control': 'no-cache',\n            //     'Referrer': 'sss',\n            // },\n            // referrerPolicy: \"no-referrer-when-downgrade\",\n            // mode: \"cors\",\n        \n        \n        // headers: {\n        //             // \"Access-Control-Allow-Origin\": '*',\n        //             'Content-Type': 'application/json',\n        //             // 'Cache-Control': 'private'\n        //         },\n                // referrer: \"https://wwwnew.eg.org/\",\n                // referrerPolicy: \"no-referrer-when-downgrade\", // no-referrer, origin, same-origin...\n                // mode: \"cors\",\n                // cache: \"default\",\n                // redirect: \"follow\",\n                // integrity: \"\", // a hash, like \"sha256-abcdef1234567890\"\n                // keepalive: false, // true\n                // signal: undefined, // AbortController to abort request\n                // window: window, // null\n                //     credentials: 'include',\n        //         // referrer: \"https://wwwnew.eg.org/\", // or \"\" to send no Referer header,\n        //         // or an url from the current origin\n        //         // referrerPolicy: \"no-referrer-when-downgrade\", // no-referrer, origin, same-origin...\n        //         // mode: \"cors\", // same-origin, no-cors\n        //         mode: \"cors\",\n        //         // credentials: \"same-origin\", // omit, include\n        //         // cache: \"default\", // no-store, reload, no-cache, force-cache, or only-if-cached\n        //         // redirect: \"follow\", // manual, error\n        //         // integrity: \"\", // a hash, like \"sha256-abcdef1234567890\"\n        //         // keepalive: false, // true\n        //         // signal: undefined, // AbortController to abort request\n        //         // window: window // null\n        //               // credentials: 'include',\n        // // mode: 'cors'\n     }\n    )\n    .then((response) => {\n        console.log(\"a\");\n        console.log(response)\n        if(response.status === 200){\n            console.log(\"SUCCESSS\");\n            return response.json();     \n        }else if(response.status === 408){\n            console.log(\"SOMETHING WENT WRONG\")\n            this.setState({ requestFailed: true })\n        }\n\n\n    })\n    .then((data) => {\n        console.log(\"b\");\n\n        console.log(data);\n        console.log(data['uuid']);\n        // this.state.name = data['uuid'];\n        this.setState({name: data['name']});\n        this.setState({link: data['link']});\n        this.setState({description: data['introductoryText']});\n        // console.log(data.json())\n\n        // this.setState({ isLoading: false, downlines: data.response })\n        // console.log(\"DATA STORED\")\n    })\n    .catch((error) => {\n        console.log(\"DATA aaa \"+error)\n\n        this.setState({ requestFailed: true })\n        \n    })\n    \n\n//     let url1 = 'https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10';\n    \n//     let myheader = {\n//             method: 'GET',\n//             headers: {\n//             'Content-Type': 'application/json;charset=utf-8',\n//             'Access-Control-Allow-Origin': '*',\n//             },\n//             'referrerPolicy': 'no-referrer-when-downgrade',\n//             'mode': 'cors', // no-cors, *cors, same-origin\n//             'cache': 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n//             // 'credentials': 'same-origin', // include, *same-origin, omit\n//     };\n//     let response = await fetch(url1,myheader);\n//     // get one header\n//     // alert(response.headers.get('Content-Type')); // application/json; charset=utf-8\n\n\n//     let commits = await response.text(); // read response body and parse as JSON\n\n//     // alert(commits[0].author.login);\n// console.log(\"end call api\")\n// console.log(\"pass\");\n\n// var myHeaders = new Headers();\n// myHeaders.append(\"Cookie\", \"JSESSIONID=2D72F41C0B312B8DB291FCCD6EFCB6B1\");\n// myHeaders.append(\"Content-Type\", \"application/json\");\n// myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n// myHeaders.append(\"referrerPolicy\", \"no-referrer-when-downgrade\");\n\n// var requestOptions = {\n//   method: 'GET',\n//   headers: myHeaders,\n//   redirect: 'follow'\n// };\n\n// fetch(\"https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10\", requestOptions)\n//   .then(response => response.text())\n//   .then(result => console.log(result))\n//   .catch(error => console.log('error', error));\n\n//   console.log(\"pas1s\");\n\n\n        // console.log(\"pass\");\n        // const json = await response.text();\n        // then((textResponse) => console.log('response is ', textResponse));\n        // const json = await response.json();\n        // console.log(\"res \"+json);\n        // // await fetch('https://diglib.eg.org/rest/communities/97846f9e-10b3-4c61-919b-ca65128c8e10', {\n        // await fetch('https://api.connectingcontexts.uk/Process.php?id=1', {\n        //     method: \"GET\", // default, so we can ignore\n        //      headers: {\n        //         \"Access-Control-Allow-Origin\": \"*\",\n        //         \"Content-Type\": \"text/plain\"\n        //     },\n        //     //  accept: 'application/json'\n         \n        // //  }).then((response) => response.json())\n        // }).then((response) => response.text())\n         \n        //  .then((textResponse) => console.log('response is ', textResponse))\n        //  .catch((error) => {\n        //     console.log(\"3\");\n\n        //      console.log(error);\n        //  });\n        // console.log(\"2\");\n        // const json = await response.json();\n        // console.log(\"3\");\n        // console.log(json);\n        // const name = json.name;\n        // const text = [];\n        // const cards = [];\n        // // console.log(processes.length);\n        // for (let i = 0; i < processes.length; i++) {\n        //     text.push(processes[i].Process);\n        //     this.setState({slideshow: null});\n        //     await this.recursiveSlideshow(processes[i].ID);\n        //     cards.push(\n        //         <div className=\"card\" key={processes[i].ID} id={processes[i].ID} >\n        //             <a href={\"/Process?processId=\" + processes[i].ID}>\n        //                 <div className=\"container\">\n        //                     {/* Locally stored images */}\n        //                     {/* <img src={require('../' + processes[i].image).default}  alt={'process image for ' + processes[i].Process}/> */}\n        //                     <Carousel showIndicators={true} showStatus={true} showArrows={true} showThumbs={true} autoPlay={true} axis={\"horizontal\"} infiniteLoop={true}>\n        //                     {this.state.slideshow}\n        //                     </Carousel>\n        //                     <p><b>{processes[i].Process}</b></p>\n        //                 </div>\n        //             </a>\n        //         </div>\n        //         // <div className=\"card\">\n        //         //     kskks\n        //         // </div>\n        //     );\n        // }\n        // console.log(cards.length);\n        // this.setState({cards: cards});\n        // this.setState({textpr: text});\n        \n\n    }\n\n\n\n    render(){\n        return (\n        <div>\n            <h1>{this.state.name}</h1>\n            {/* <h2>{this.props.subtitle}</h2> */}\n            <div className=\"row justify-content-md-center\">\n            </div>\n            <br></br>\n            <br></br>\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                <Col lg={7}>                <div className=\"content\" dangerouslySetInnerHTML={{__html: this.state.description}}></div>\n</Col>\n                <Col md={1}  className=\"vl\"></Col>\n              \n                {/* {this.props.description} */}\n                <Col lg={2}><h5>Social media: </h5></Col>\n\n                {/* <Col md=\"auto\" >                \n                    Latest Proceedings \n                </Col>\n                <Col md={1}  className=\"vl\"></Col>\n                <Col md=\"auto\">\n                    <h5>Social media</h5>\n                </Col> */}\n\n            {/* <div className=\"row justify-content-md-center\">\n            <div className=\"col col-lg-7\">\n            \n            </div>\n            <div className=\"vl\"></div>\n            <div className=\"col col-sm\">\n            </div>\n            <div className=\"vl\"></div>\n            <div className=\"col col-sm\">\n                Social media\n            </div>\n            </div> */}\n                </Row>\n            </Container>\n        </div>\n        )\n    }\n}\nexport default EGdata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}